{"version":3,"sources":["logo.png","small-logo.png","App.js","reportWebVitals.js","index.js"],"names":["App","Navbar","collapseOnSelect","expand","bg","variant","fixed","Container","Brand","alt","src","small_logo","width","height","className","to","activeClass","spy","smooth","Toggle","aria-controls","Collapse","id","Nav","style","position","params","particles","color","value","line_linked","number","isMobile","size","logo","fontSize","ButtonToolbar","aria-label","ButtonGroup","Button","href","Table","striped","bordered","hover","Accordion","Card","as","Header","eventKey","Body","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sYAAe,G,OAAA,IAA0B,kCCA1B,MAA0B,uCCuS1BA,G,8KAvRX,OACE,gCAGE,cAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,QAAQC,QAAQ,QACxDC,MAAM,MADN,SAEE,eAACC,EAAA,EAAD,WACE,eAACN,EAAA,EAAOO,MAAR,WACE,qBACEC,IAAI,GACJC,IAAKC,EACLC,MAAM,KACNC,OAAO,KACPC,UAAU,6BACT,IACH,cAAC,OAAD,CAAMA,UAAU,aAAaC,GAAG,OAAOC,YAAY,SACnDC,KAAK,EAAMC,QAAQ,EADnB,4BAKF,cAACjB,EAAA,EAAOkB,OAAR,CAAeC,gBAAc,0BAC7B,cAACnB,EAAA,EAAOoB,SAAR,CAAiBC,GAAG,wBAApB,SACE,eAACC,EAAA,EAAD,CAAKT,UAAU,UAAf,UACE,cAAC,OAAD,CAAMA,UAAU,WAAWC,GAAG,QAAQC,YAAY,SAClDC,KAAK,EAAMC,QAAQ,EADnB,mBAKA,cAAC,OAAD,CAAMJ,UAAU,WAAWC,GAAG,WAAWC,YAAY,SACrDC,KAAK,EAAMC,QAAQ,EADnB,sBAKA,cAAC,OAAD,CAAMJ,UAAU,WAAWC,GAAG,SAASC,YAAY,SACnDC,KAAK,EAAMC,QAAQ,EADnB,oBAKA,cAAC,OAAD,CAAMJ,UAAU,WAAWC,GAAG,MAAMC,YAAY,SAChDC,KAAK,EAAMC,QAAQ,EADnB,iBAKA,cAAC,OAAD,CAAMJ,UAAU,WAAWC,GAAG,WAAWC,YAAY,SACrDC,KAAK,EAAMC,QAAQ,EADnB,gCAUR,cAAC,IAAD,CACEM,MAAO,CAAEC,SAAU,YACnBZ,OAAO,OACPD,MAAM,OACNc,OAAQ,CACNC,UAAW,CACTC,MAAO,CACLC,MAAO,WAETC,YAAa,CACXF,MAAO,CACLC,MAAO,YAGXE,OAAQ,CACNF,MAAOG,WAAW,GAAK,IAEzBC,KAAM,CACJJ,MAAO,OAOf,qBAAKf,UAAU,MAAMQ,GAAG,OAAxB,SACE,yBAAQR,UAAU,aAAlB,UACE,qBAAKJ,IAAKwB,EAAMpB,UAAU,WAAWL,IAAI,SACzC,sBAAMe,MAAO,CAACI,MAAM,QAASO,SAAS,QAAtC,yBACA,eAACC,EAAA,EAAD,CAAeC,aAAW,6BAA1B,UACE,cAACC,EAAA,EAAD,CAAaxB,UAAU,OAAOuB,aAAW,cAAzC,SACE,cAACE,EAAA,EAAD,CAAQzB,UAAU,YAClB0B,KAAK,wCADL,uBAKF,cAACF,EAAA,EAAD,CAAaD,aAAW,cAAxB,SACE,cAACE,EAAA,EAAD,CAAQzB,UAAU,YAClB0B,KAAK,mCADL,+BAUR,eAACjC,EAAA,EAAD,CAAWe,GAAG,QAAd,UACE,uCACA,uCAIF,eAACf,EAAA,EAAD,CAAWe,GAAG,WAAd,UACE,0CACA,eAACmB,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,sCACA,sCACA,uCACA,+CAGJ,kCACE,+BACE,kDACA,gDACA,iDACA,kEAEF,+BACE,kDACA,iDACA,sEACA,kEAEF,+BACE,kDACA,gDACA,gDACA,2EAOR,eAACrC,EAAA,EAAD,CAAWe,GAAG,SAAd,UACE,wCACA,uCAIF,eAACf,EAAA,EAAD,CAAWe,GAAG,MAAd,UACE,qCACA,eAACuB,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACD,EAAA,EAAU1B,OAAX,CAAkB4B,GAAID,IAAKE,OAAQC,SAAS,QAA5C,8BAGA,cAACJ,EAAA,EAAUxB,SAAX,CAAoB4B,SAAS,QAA7B,SACE,cAACH,EAAA,EAAKI,KAAN,iPAQJ,eAACJ,EAAA,EAAD,WACE,cAACD,EAAA,EAAU1B,OAAX,CAAkB4B,GAAID,IAAKE,OAAQC,SAAS,WAA5C,kCAGA,cAACJ,EAAA,EAAUxB,SAAX,CAAoB4B,SAAS,WAA7B,SACE,cAACH,EAAA,EAAKI,KAAN,+LAQJ,eAACJ,EAAA,EAAD,WACE,cAACD,EAAA,EAAU1B,OAAX,CAAkB4B,GAAID,IAAKE,OAAQC,SAAS,YAA5C,sDAGA,cAACJ,EAAA,EAAUxB,SAAX,CAAoB4B,SAAS,YAA7B,SACE,cAACH,EAAA,EAAKI,KAAN,yWAWJ,eAACJ,EAAA,EAAD,WACE,cAACD,EAAA,EAAU1B,OAAX,CAAkB4B,GAAID,IAAKE,OAAQC,SAAS,aAA5C,2DAGA,cAACJ,EAAA,EAAUxB,SAAX,CAAoB4B,SAAS,aAA7B,SACE,cAACH,EAAA,EAAKI,KAAN,kLAOJ,eAACJ,EAAA,EAAD,WACE,cAACD,EAAA,EAAU1B,OAAX,CAAkB4B,GAAID,IAAKE,OAAQC,SAAS,oBAA5C,uDAGA,cAACJ,EAAA,EAAUxB,SAAX,CAAoB4B,SAAS,oBAA7B,SACE,cAACH,EAAA,EAAKI,KAAN,0JAOJ,eAACJ,EAAA,EAAD,WACE,cAACD,EAAA,EAAU1B,OAAX,CAAkB4B,GAAID,IAAKE,OAAQC,SAAS,aAA5C,yCAGA,cAACJ,EAAA,EAAUxB,SAAX,CAAoB4B,SAAS,aAA7B,SACE,eAACH,EAAA,EAAKI,KAAN,gEAEG,mBAAGV,KAAK,mCAAR,8CAFH,0JAOG,mBAAGA,KAAK,0CAAR,qDAPH,aAYJ,eAACM,EAAA,EAAD,WACE,cAACD,EAAA,EAAU1B,OAAX,CAAkB4B,GAAID,IAAKE,OAAQC,SAAS,aAA5C,6CAGA,cAACJ,EAAA,EAAUxB,SAAX,CAAoB4B,SAAS,aAA7B,SACE,cAACH,EAAA,EAAKI,KAAN,wQAUN,oBAAIpC,UAAU,kBAAd,8BACA,8DAAgC,mBAAG0B,KAAK,+BAAR,yCAMlC,eAACjC,EAAA,EAAD,CAAWe,GAAG,WAAd,UACE,0CACA,uCAIF,cAACrB,EAAA,EAAD,CAAQG,GAAG,QAAQC,QAAQ,QAAQF,OAAO,KAA1C,SACE,eAACI,EAAA,EAAD,WACE,cAACgB,EAAA,EAAD,CAAKT,UAAU,UAAf,6CAGA,cAACS,EAAA,EAAD,CAAKT,UAAU,UAAf,SACE,mBAAG0B,KAAK,uDAAR,uC,GA7QIW,cCFHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bc5b1ea8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.bfdf673f.png\";","export default __webpack_public_path__ + \"static/media/small-logo.35b19e33.png\";","import React, { Component } from \"react\";\nimport Particles from 'react-particles-js';\nimport { Accordion, Button, ButtonGroup, ButtonToolbar, Card,\n  Container, Nav, Navbar, Table } from 'react-bootstrap';\nimport { Link } from 'react-scroll';\nimport {isMobile} from 'react-device-detect';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport logo from './logo.png';\nimport small_logo from './small-logo.png';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n\n        {/* Navbar */}\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\"\n        fixed=\"top\">\n          <Container>\n            <Navbar.Brand>\n              <img\n                alt=\"\"\n                src={small_logo}\n                width=\"30\"\n                height=\"30\"\n                className=\"d-inline-block align-top\"\n              />{' '}\n              <Link className=\"brand-text\" to=\"home\" activeClass=\"active\"\n              spy={true} smooth={true}>\n                  BadgerHacks\n              </Link>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"ml-auto\">\n                <Link className=\"nav-link\" to=\"about\" activeClass=\"active\"\n                spy={true} smooth={true}>\n                    About\n                </Link>\n\n                <Link className=\"nav-link\" to=\"schedule\" activeClass=\"active\"\n                spy={true} smooth={true}>\n                    Schedule\n                </Link>\n\n                <Link className=\"nav-link\" to=\"prizes\" activeClass=\"active\"\n                spy={true} smooth={true}>\n                    Prizes\n                </Link>\n\n                <Link className=\"nav-link\" to=\"faq\" activeClass=\"active\"\n                spy={true} smooth={true}>\n                    FAQ\n                </Link>\n\n                <Link className=\"nav-link\" to=\"sponsors\" activeClass=\"active\"\n                spy={true} smooth={true}>\n                    Sponsors\n                </Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n\n        {/* Particles Effect */}\n        <Particles\n          style={{ position: \"absolute\" }}\n          height=\"100%\"\n          width=\"100%\"\n          params={{\n            particles: {\n              color: {\n                value: \"#9b0000\"\n              },\n              line_linked: {\n                color: {\n                  value: \"#c5050c\"\n                }\n              },\n              number: {\n                value: isMobile ? 15 : 50\n              },\n              size: {\n                value: 3\n              }\n            }\n          }}>\n        </Particles>\n\n        {/* Logo and Buttons at Top */}\n        <div className=\"App\" id=\"home\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <code style={{color:\"black\", fontSize:\"3rem\"}}>BadgerHacks</code>\n            <ButtonToolbar aria-label=\"Toolbar with button groups\">\n              <ButtonGroup className=\"mr-1\" aria-label=\"First group\">\n                <Button className=\"top-btn-l\"\n                href=\"https://discord.com/invite/AGyyPVtpVX\">\n                  Discord\n                </Button>\n              </ButtonGroup>\n              <ButtonGroup aria-label=\"Third group\">\n                <Button className=\"top-btn-r\"\n                href=\"https://badgerhacks.devpost.com/\">\n                  Devpost\n                </Button>\n              </ButtonGroup>\n            </ButtonToolbar>\n          </header>\n        </div>\n\n        {/* About Section */}\n        <Container id=\"about\">\n          <h1>About</h1>\n          <p>TBA</p>\n        </Container>\n\n        {/* Schedule Section */}\n        <Container id=\"schedule\">\n          <h1>Schedule</h1>\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Time</th>\n                <th>Event</th>\n                <th>Location</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Jan. 18 (Monday)</td>\n                <td>6:00 a.m. (CT)</td>\n                <td>Hacking Starts!</td>\n                <td>Discord Announcements Channel</td>\n              </tr>\n              <tr>\n                <td>Jan. 22 (Friday)</td>\n                <td>11:59 p.m. (CT)</td>\n                <td>Devpost Closes and Judging Commences</td>\n                <td>Discord Announcements Channel</td>\n              </tr>\n              <tr>\n                <td>Jan. 24 (Sunday)</td>\n                <td>3:00 p.m. (CT)</td>\n                <td>Award Ceremony</td>\n                <td>Discord Announcements Channel</td>\n              </tr>\n            </tbody>\n          </Table>\n        </Container>\n\n        {/* Prizes Section */}\n        <Container id=\"prizes\">\n          <h1>Prizes</h1>\n          <p>TBA</p>\n        </Container>\n\n        {/* FAQ Section */}\n        <Container id=\"faq\">\n          <h1>FAQ</h1>\n          <Accordion>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"about\">\n                What can I make?\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"about\">\n                <Card.Body>\n                  Participants can make anything they want. Prizes will be\n                  given to the most creative and unique projects. The only\n                  restriction is that projects must be made within the\n                  Hackathon week (between January 18th to January 22nd).\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"teamwork\">\n                Is teamwork allowed?\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"teamwork\">\n                <Card.Body>\n                  Yes! We highly encourage teamwork. Participants\n                  may work alone or in teams of up to 4 people. The\n                  \"group-search\" channel on our Discord server can help you\n                  find teammates.\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"donotknow\">\n                Is it fine if I do not know how to code?\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"donotknow\">\n                <Card.Body>\n                  Absolutely. Everyone is welcome to participate in this\n                  Hackathon and we will be posting useful resources under\n                  the \"resources\" channel of our Discord server. These\n                  resources will be handpicked from our team who have\n                  developed many full stack web and phone applications. We\n                  will divide these resources by beginner, intermediate,\n                  and advanced.\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"assistance\">\n                Will beginner programmers receive assistance?\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"assistance\">\n                <Card.Body>\n                  Indeed! Please post all debugging questions under the\n                  \"debugging\" channel of our Discord server. We will try our\n                  best to answer as many questions as possible.\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"externalresources\">\n                Can code from external resources be used?\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"externalresources\">\n                <Card.Body>\n                  If credit is given through code comments and the code is not\n                  under copyright restrictions, using code from external\n                  resources is fine.\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"submission\">\n                How do I submit my project?\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"submission\">\n                <Card.Body>\n                  Submit projects by uploading them to our Devpost\n                  (<a href=\"https://badgerhacks.devpost.com/\">\n                  https://badgerhacks.devpost.com/</a>). Source code and a\n                  video under 5 minutes are required in order for a project\n                  to be valid. The submission deadline is included in the\n                  schedule above\n                  (<a href=\"https://badgerhacks.github.io/#schedule\">\n                  https://badgerhacks.github.io/#schedule</a>).\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"sourcecode\">\n                How do I submit my source code?\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"sourcecode\">\n                <Card.Body>\n                  Source code for the project should be linked in the Devpost\n                  submission. Pushing source code to GitHub is preferred, but\n                  participants may upload their code as a zip file to other\n                  places like Google Drive or Dropbox if that is easier for\n                  them.\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n          <h4 className=\"other-questions\">Other Questions?</h4>\n          <p>Please email / contact us at <a href=\"mailto:badgerhacks@gmail.com\">\n            badgerhacks@gmail.com</a>\n          </p>\n        </Container>\n\n        {/* Sponsors Section */}\n        <Container id=\"sponsors\">\n          <h1>Sponsors</h1>\n          <p>TBA</p>\n        </Container>\n\n        {/* Footer */}\n        <Navbar bg=\"light\" variant=\"light\" expand=\"lg\">\n          <Container>\n            <Nav className=\"mr-auto\">\n              Copyright © BadgerHacks 2020\n            </Nav>\n            <Nav className=\"ml-auto\">\n              <a href=\"https://github.com/badgerhacks/badgerhacks.github.io\">\n                Source Code\n              </a>\n            </Nav>\n          </Container>\n        </Navbar>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}